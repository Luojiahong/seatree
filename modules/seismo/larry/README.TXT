this package provides surface wave tomography inversion tools from 
Lapo Boschi (see his comments below)

Surface wave phase velocity measurements are from Ekstrom et
al. (1997) who explain how the measurements are done, and Boschi and
Ekstrom (2002) who report an update of the database.


this modified version has streamlined operation. assuming you have the
environment flags 

ARCH, F77, and FFLAGS set to your hardware (e.g. the output of `uname
-a`), your fortran compiler (e.g. gfortran), and the compiler options
(e.g. -O), you should be able to compile with "make" and run the
script invert_driver for the two different datasets and damping
choices. 


Try 

./invert_driver R0075_1 0.1 0.5 9

to invert the 75 second Rayleigh wave data set with 0.1 norm damping,
0.5 roughness damping, and 9 degree pixel size. If all works, the
output map will be in R0075_1.ps. This output file is included for
comparison purposes. 






original comments from Lapo Boschi below


>>>>



--retrieve the files you need
gunzip homework_lapo.tar.gz
tar xvf homework_lapo.tar

--wei_sum.02.L0035_1.txt and wei_sum.02.R0075_1.txt are two sets of phase
  anomaly (i.e. dispersion) observations from the database of Ekstrom, Tromp,
  and Larson (JGR 1997). L0035 stands for 35 s Love waves, R0075 stands for 75
  s Rayleigh waves. 

--files with suffix .f are fortran programs, whose use is detailed
  below. files with suffix .csh are shell scripts. tmp.cpt is a colour palette
  file used by GMT. gtg.* and gtd.* are files containing the roughness damping
  matrix for the Cholesky factorization approach (generated by the program
  rdamping.f).

--compile the code (your f77 compiler might need different flags)
f77 -o blk_matrix_ata blk_matrix_ata.f
f77 -o blk_lsqr blk_lsqr.f
f77 -o blk2gmt blk2gmt.f
f77 -o blk_cholesky blk_cholesky.f

--make sure that the code is compiled properly (no error messages)

--read the data, to build the matrices A and A^T.A
./blk_matrix_ata 
wei_sum.02.L0035_1.txt
L35
		 
--this takes a few minutes. when the run is finished, your directory should
  contain the following new files:
L35.jwkb.xxx
L35.jwkb.pnt
L35.jwkb.ind
L35.jwkb.rhs
L35.jwkb.atd
L35.jwkb.ata

--the first four (.xxx, .pnt, .ind) contain the matrix A. The fourth one the
  phase anomaly observations (one per row of A). The last two containe the
  matrix A^T.A and the vector A^T.d.

--invert the matrix A via LSQR
./blk_lsqr
L35.jwkb.xxx
L35.jwkb.ind
L35.jwkb.pnt
L35.jwkb.rhs
L35.lsqr
n
10.
0.
0.

--the last three numbers above are the values of the "damping parameters". I
  have just given an arbitrary example here, and you should experiment with
  different values. The very last number is only relevant if a
  parameterization of nonuniform resolution is implemented (this would involve
  editing of both blk_matrix_ata.f and blk_lsqr.f on your part). When the
  inversion is done, your directory should contain a new file L35.lsqr with
  the damped least squares solution. Note that, if you are running a lot of
  inversions, you should change the name of the output file each time, or
  you'll lose it.

--alternatively, you can find the least squares solution via Cholesky
  factorization of the matrix A^T.A. 
./blk_cholesky
wei_sum.02.L0035_1.txt
L35.jwkb.ata
L35.jwkb.atd
L35.cholesky
100.
0.
n

--Notice that, with this choice of damping parameters, L35.lsqr and
  L35.cholesky are almost coincident. Would they be so similar, if we had
  chosen a different damping scheme? and why aren't they exactly coincident,
  anyway? 

--the GMT script plotblk.csh is provided to display the least squares solution
  in the form of a tomographic map. The script also runs the program
  blk2gmt.f, which you must compile, needed to convert the solution file to a
  GMT-friendly format. plotblk.csh has two arguments: the name of the solution
  file, and the name of a "colour palette" file, that defines the colours to be
  used in your plot. Example:

./plotblk.csh L35.lsqr tmp.cpt

--If GMT is working properly, a "postscript" file named L35.lsqr.ps should now
  exist in your directory. You can view it with your postscript viewer
  (e.g. ghostview).

ghostview L35.lsqr.ps

--Note that the solution files are defined as percent perturbation in phase
  velocity with respect to the (constant) PREM value. The velocity
  heterogeneities you now see should have a simple relation to shallow
  geophysical features (plates, continental roots, mid-oceanic ridges...);
  their value should not exceed, say, ~15%.

--The colour palette file tmp.cpt is provided, but you'll find it easy to
  create alternative colour palettes with the GMT command "makecpt". For
  example, if you have no colour printer, try 

makecpt -Cgray -T-14/14/1 -Z -V > bw.cpt
./plotblk.csh L35.lsqr bw.cpt

--type "makecpt" or "man makecpt" and hit "enter", to see what kinds of
  colours you can use. Tomography is largely a visualization problem, and it
  is important to choose an appropriate colour scale.

--now you can repeat the exercise with the Rayleigh wave 35 s database.

------------------------------------------------------------------------------

--IF YOU ALREADY HAVE SOME EXPERIENCE WITH FORTRAN PROGRAMMING, you might want
  to try another exercise. You can change the parameterization, editing the
  code a bit. In all the programs you want to edit the lines 
        PARAMETER(EQ_INCR=5.)
        parameter(ifa=1)
  or (in the inversion programs)
        parameter(ncoef=1988)
  or
        parameter(n=1988)           ! when ifa=1 and eq_incr=5
  where the integer is the number of free parameter, which is output
  on screen as you run blk_matrix_ata

--if you want to increase the number of free parameters in only one  region,
  you have to edit also
      parameter(westbo=-10.,eastbo=45.,southbo=30.,rthnobo=10.)  
  which defines the region of higher resolution, and 
      parameter(ifa=1) which defines the ratio
  between the size of a block's side in the lower and higher resolution region
  (it should be >=1)

--Cholesky factorization uses a previously computed GtG damping matrix. if you
  change the parameterization, you have to recompute it. The code to do so is
  rdamping.f  A file with the damping matrix for the uniform 5x5 grid is
  provided:  gtg.001988

--variance reduction is computed by dot-multiplying the matrix A and the
  solution model x_ls, taking the squared norm of the difference of A.x_ls -
  the data vector, and dividing the result by the modulus of the data
  vector. then you subtract the number you have obtained from 1 (eq. 1.4 of
  Boschi and Dziewonski 1999, eq. 1.19 of my thesis). This is done
  automatically in the lsqr  code, once the solution is found, but not in the
  Cholesky one.  I encourage you to write a little separate program to
  calculate  the variance reduction of any model.
